apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clearml.fullname" . }}-apiserver
  labels:
    {{- include "clearml.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.apiserver.replicaCount }}
  selector:
    matchLabels:
      {{- include "clearml.selectorLabelsApiServer" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.apiserver.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "clearml.selectorLabelsApiServer" . | nindent 8 }}
    spec:
      {{- if .Values.apiserver.storage.enableConfigVolume }}
      volumes:
        - name: apiserver-config
          persistentVolumeClaim:
            claimName: {{ include "clearml.fullname" . }}-apiserver-config
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.apiserver.image.repository }}:{{ .Values.apiserver.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.apiserver.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
          env:
          - name: TRAINS_ELASTIC_SERVICE_HOST
            value: "{{ tpl .Values.elasticsearch.name . }}"
          - name: TRAINS_ELASTIC_SERVICE_PORT
            value: "{{ .Values.elasticsearch.httpPort }}"
          - name: TRAINS_MONGODB_SERVICE_HOST
            value: "{{ tpl .Values.mongodb.service.name . }}"
          - name: TRAINS_MONGODB_SERVICE_PORT
            value: "{{ .Values.mongodb.service.port }}"
          - name: TRAINS_REDIS_SERVICE_HOST
            value: "{{ tpl .Values.redis.master.name . }}"
          - name: TRAINS_REDIS_SERVICE_PORT
            value: "{{ .Values.redis.master.port }}"
          - name: TRAINS__apiserver__pre_populate__enabled
            value: "{{ .Values.apiserver.prepopulateEnabled }}"
          - name: TRAINS__apiserver__pre_populate__zip_files
            value: "{{ .Values.apiserver.prepopulateZipFiles }}"
          - name: TRAINS__apiserver__pre_populate__artifacts_path
            value: "{{ .Values.apiserver.prepopulateArtifactsPath }}"
          - name: TRAINS_SERVER_DEPLOYMENT_TYPE
            value: "helm-cloud"
          - name: TRAINS_CONFIG_DIR
            value: /opt/trains/config
          - name: TRAINS__apiserver__default_company
            value: {{ .Values.clearml.defaultCompany }}
          - name: TRAINS__SECURE__HTTP__SESSION_SECRET__APISERVER
            valueFrom:
              secretKeyRef:
                name: clearml-conf
                key: http_session
          - name: TRAINS__SECURE__AUTH__TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                name: clearml-conf
                key: auth_token
          - name: TRAINS__secure__credentials__apiserver__user_key
            valueFrom:
              secretKeyRef:
                name: clearml-conf
                key: apiserver_key
          - name: TRAINS__secure__credentials__apiserver__user_secret
            valueFrom:
              secretKeyRef:
                name: clearml-conf
                key: apiserver_secret
          - name: TRAINS__SECURE__CREDENTIALS__TESTS__USER_KEY
            valueFrom:
              secretKeyRef:
                name: clearml-conf
                key: tests_user_key
          - name: TRAINS__SECURE__CREDENTIALS__TESTS__USER_SECRET
            valueFrom:
              secretKeyRef:
                name: clearml-conf
                key: tests_user_secret
         {{- if .Values.apiserver.extraEnvs }}
         {{ toYaml .Values.apiserver.extraEnvs | nindent 10 }}
         {{- end }}
          args:
            - apiserver
          livenessProbe:
            initialDelaySeconds: {{ .Values.apiserver.livenessDelay }}
            httpGet:
              path: /debug.ping
              port: 8008
          readinessProbe:
            initialDelaySeconds: {{ .Values.apiserver.readinessDelay }}
            failureThreshold: 8
            httpGet:
              path: /debug.ping
              port: 8008
          {{- if .Values.apiserver.storage.enableConfigVolume }}
          volumeMounts:
           - name: apiserver-config
             mountPath: /opt/trains/config
          {{- end }}
          resources:
            {{- toYaml .Values.apiserver.resources | nindent 12 }}
      {{- with .Values.apiserver.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiserver.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiserver.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
